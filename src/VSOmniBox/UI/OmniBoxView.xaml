<Window x:Class="VSOmniBox.UI.OmniBoxView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
        xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
        xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
        xmlns:uicolors="clr-namespace:VSOmniBox.UI.Colors"
        xmlns:utilities1="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
        mc:Ignorable="d" 
        AllowsTransparency="True"
        Background="Transparent"
        FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        SizeToContent="Height"
        Width="600"
        WindowStartupLocation="CenterOwner"
        WindowStyle="None">
    <Window.Resources>

        <!-- Search box item template styles our results list. -->
        <DataTemplate x:Key="SearchBoxDataTemplate">
            <StackPanel Orientation="Horizontal">
                <imaging:CrispImage x:Name="Icon"
                                    Width="32"
                                    Height="32"
                                    Moniker="{Binding Path=Icon}"
                                    Margin="2,0,2,0"
                                    theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource AncestorType=ListBox}, Converter={StaticResource BrushToColorConverter}}" />
                <StackPanel>
                    <TextBlock x:Name="TitleBlock" FontSize="14" Text="{Binding Path=Title}" Margin="20,0,0,0" />
                    <TextBlock x:Name="DescriptionBlock" FontSize="12" Text="{Binding Path=Description}" FontStyle="Italic" Margin="25,0,0,0" ToolTip="{Binding Path=Description}"/>
                </StackPanel>
            </StackPanel>

            <DataTemplate.Triggers>

                <!-- Null description, hide the description block. -->
                <DataTrigger Binding="{Binding Description}" Value="">
                    <Setter TargetName="DescriptionBlock" Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <!-- Empty description, hide the description block. -->
                <DataTrigger Binding="{Binding Description}" Value="{x:Null}">
                    <Setter TargetName="DescriptionBlock" Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <!-- Pivot items are special emphasized results that are used to group items. -->
                <DataTrigger Binding="{Binding IsPivot}" Value="True">
                    <Setter TargetName="TitleBlock" Property="Margin" Value="0" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="DescriptionBlock" Property="Visibility" Value="Collapsed" />
                    <Setter Property="TextBlock.FontSize" Value="16" />
                    <Setter Property="TextBlock.FontWeight" Value="Bold" />
                </DataTrigger>

            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="PopupBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1.0" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static uicolors:VSColors.SearchPopupBorderBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static uicolors:VSColors.SearchPopupBrushKey}}" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static uicolors:VSColors.SearchTextBoxBorderBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static uicolors:VSColors.SearchTextBoxBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static uicolors:VSColors.SearchTextBoxTextBrushKey}}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static uicolors:VSColors.SearchResultsListBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static uicolors:VSColors.SearchResultsListTextBrushKey}}" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="ItemTemplate" Value="{StaticResource SearchBoxDataTemplate}" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="Margin" Value="1,0,1,1" />
            <Setter Property="MaxHeight" Value="600" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.HasItems" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <utilities1:BrushToColorConverter x:Key="BrushToColorConverter"/>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{DynamicResource {x:Static uicolors:VSColors.SearchToggleButtonBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static uicolors:VSColors.SearchToggleButtonTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="0.0" />
            <Setter Property="Padding" Value="5.0" />
            <Setter Property="VerticalAlignment" Value="Bottom" />

            <!-- 💕 Thank you Stack Overflow 💕: https://stackoverflow.com/questions/5618800/change-the-background-color-of-a-toggle-button-when-the-toggle-button-is-checked-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding Background}"
                                BorderThickness="1,1,1,1"
                                HorizontalAlignment="Center"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True"
                                VerticalAlignment="Center">
                            <ContentPresenter x:Name="Content" VerticalAlignment="Bottom"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="{DynamicResource {x:Static uicolors:VSColors.SearchToggleButtonCheckedBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static uicolors:VSColors.SearchToggleButtonCheckedTextBrushKey}}" />
                                <Setter Property="Padding" Value="5,10,5,10" />
                                <Setter TargetName="Content" Property="VerticalAlignment" Value="Center" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static uicolors:VSColors.SearchToggleButtonCheckedBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static uicolors:VSColors.SearchToggleButtonCheckedTextBrushKey}}" />
                    <Setter Property="Padding" Value="5,10,5,10" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding DismissCommand}" Key="Esc"/>
    </Window.InputBindings>

    <Window.Content>

        <Border Style="{StaticResource PopupBorderStyle}" >
            <DockPanel LastChildFill="True" theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}">

                <StackPanel DockPanel.Dock="Top"  Orientation="Horizontal">

                    <ToggleButton IsChecked="{Binding IsAllItemsPivot}">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.All}" Margin="2,0,2,0" />
                                <TextBlock Text="All (Alt+Q)" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>

                    <ToggleButton IsChecked="{Binding IsCodeItemsPivot}">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal">
                                <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Code}" Margin="2,0,2,0" />
                                <TextBlock Text="Code (Ctrl+T)" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>

                    <ToggleButton IsChecked="{Binding IsIDEItemsPivot}">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Extension}" Margin="2,0,2,0" />
                                <TextBlock Text="IDE (Ctrl+Q)" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>

                    <ToggleButton IsChecked="{Binding IsHelpItemsPivot}">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.F1Help}" Margin="2,0,2,0" />
                                <TextBlock Text="Help (Ctrl+F1)" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                </StackPanel>

                <DockPanel LastChildFill="True" DockPanel.Dock="Top" HorizontalAlignment="Stretch" >
                    <imaging:CrispImage Width="32" DockPanel.Dock="Left" Height="32" Moniker="{x:Static catalog:KnownMonikers.Search}" Margin="2" />
                    <TextBox Name="SearchTextBox"
                                     DockPanel.Dock="Right"
                                     Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged, FallbackValue='Search Anything...'}" Margin="2">
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding DownCommand}" Key="Down" />
                            <KeyBinding Command="{Binding DismissCommand}" Key="Esc" />
                            <KeyBinding Command="{Binding InvokeCommand}" Key="Return" />
                            <KeyBinding Command="{Binding UpCommand}" Key="Up" />
                        </TextBox.InputBindings>
                    </TextBox>
                </DockPanel>
                <ListBox x:Name="ResultsBox"
                    DockPanel.Dock="Bottom"
                                 ItemsSource="{Binding SearchResults}"
                                 MouseDoubleClick="OnMouseDoubleClick"
                                 SelectionChanged="SelectionChanged"
                                 SelectedIndex="{Binding SelectedItemIndex}" />
            </DockPanel>
        </Border>

    </Window.Content>
</Window>
